
//
// Application definition created for the application atAirVantage.
// This is an auto generated definition for a binary-only application.
//
// Do not edit, doing so may cause the application to fail.
//

start: auto
sandboxed: false

requires:
{
}

bundles:
{
    binary:
    {
        [rx]   ./read-only/bin/atAirVantage   /bin/atAirVantage
        [rx]   ./read-only/lib/libComponent_atAirVantage.so   /lib/libComponent_atAirVantage.so
    }
}

processes:
{
    faultAction: restart

    envVars:
    {
        PATH = "/legato/systems/current/apps/atAirVantage/read-only/bin:/usr/local/bin:/usr/bin:/bin"
    }

    run:
    {
        ( atAirVantage )
    }
}

extern:
{
    requires:
    {
        atAirVantage.atAirVantage.le_atServer = $CURDIR/interfaces/le_atServer.api
        atAirVantage.atAirVantage.le_avc = $CURDIR/interfaces/le_avc.api
        atAirVantage.atAirVantage.le_mdc = $CURDIR/interfaces/le_mdc.api
        atAirVantage.atAirVantage.le_mrc = $CURDIR/interfaces/le_mrc.api
        atAirVantage.atAirVantage.le_data = $CURDIR/interfaces/le_data.api
    }

}
bindings:
{
    atAirVantage.atAirVantage.le_atServer -> atService.le_atServer
    atAirVantage.atAirVantage.le_avc -> avcService.le_avc
    atAirVantage.atAirVantage.le_mdc -> modemService.le_mdc
    atAirVantage.atAirVantage.le_mrc -> modemService.le_mrc
    atAirVantage.atAirVantage.le_data -> dataConnectionService.le_data
}
