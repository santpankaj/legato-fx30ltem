#!/bin/bash
# --------------------------------------------------------------------------------------------------
# Ninja build script generator for the liblegato build.
#
# Copyright (C) Sierra Wireless Inc.
# --------------------------------------------------------------------------------------------------

# Ensure all the required variables are set.
if [ -z "$LEGATO_ROOT" ]
then
    echo "**ERROR: LEGATO_ROOT is not set." 1>&2
    exit 1
fi

if [ -z "$LEGATO_TARGET" ]
then
    echo "**ERROR: LEGATO_TARGET is not set." 1>&2
    exit 1
fi

if [ -z "$CC" ]
then
    echo "**ERROR: CC is not set." 1>&2
    exit 1
fi

BUILD_DIR=$LEGATO_ROOT/build/$LEGATO_TARGET/framework
DEBUG_DIR=$LEGATO_ROOT/build/$LEGATO_TARGET/debug

NINJA_SCRIPT=$BUILD_DIR/build.ninja
NINJA_SCRIPT_GENERATOR=$0

BIN_DIR=$BUILD_DIR/bin
LIB_DIR=$BUILD_DIR/lib
SRC_DIR=$LEGATO_ROOT/framework/liblegato

# Turn a list of source file paths into a list of paths to the object (.o) files that they will
# be compiled into.
function ObjectsFromSources()
{
    for sourceFile in $*
    do
        printf "%s" "$BUILD_DIR/obj/$(basename $sourceFile).o "
    done
}

# Clean out previous ninja script
cat /dev/null > $NINJA_SCRIPT

LIBLEGATO_SOURCES=$(ls $SRC_DIR/*.c)

# For now Linux is the only valid config.  Later allow switching to other library configurations.
source $LEGATO_ROOT/framework/liblegato/ninja-config.linux
LIBLEGATO_SOURCES="$LIBLEGATO_SOURCES $(ls $SRC_DIR/linux/*.c)"
NINJA_CFLAGS="$NINJA_CFLAGS -I$SRC_DIR/linux"

LIBLEGATO_OBJECTS=$(ObjectsFromSources $LIBLEGATO_SOURCES)

LEGATO_FRAMEWORK_NICE_LEVEL=-19
LE_RUNTIME_DIR=/tmp/legato
LE_SVCDIR_SERVER_SOCKET_NAME=$LE_RUNTIME_DIR/serviceDirectoryServer
LE_SVCDIR_CLIENT_SOCKET_NAME=$LE_RUNTIME_DIR/serviceDirectoryClient

cat >> $NINJA_SCRIPT <<END-OF-HERE-DOC
# Build script for the Legato application framework's C runtime library (liblegato).

# == Auto-generated file.  DO NOT EDIT. ==
# == Generated by $0 ==

builddir = $BUILD_DIR

rule Compile
  description = Compiling liblegato source file
  depfile = \$out.d
  command = $CCACHE $CC -MMD -MF \$out.d -c \$in -o \$out -Wall -Werror \$flags \$
            -DLE_COMPONENT_NAME=framework \$
            -I$LEGATO_ROOT/framework/include \$
            -I$LEGATO_ROOT/framework/liblegato \$
            -DDISABLE_SMACK=$DISABLE_SMACK \$
            -DLE_SVCDIR_SERVER_SOCKET_NAME="\"$LE_SVCDIR_SERVER_SOCKET_NAME\"" \$
            -DLE_SVCDIR_CLIENT_SOCKET_NAME="\"$LE_SVCDIR_CLIENT_SOCKET_NAME\"" \$

build ${LIBLEGATO:?Unknown platform} : Link $LIBLEGATO_OBJECTS

rule RegenNinjaScript
  description = Regenerating framework build script
  generator = 1
  command = export LEGATO_TARGET=$LEGATO_TARGET && \$
            export LEGATO_ROOT="$LEGATO_ROOT" && \$
            $NINJA_SCRIPT_GENERATOR

build $NINJA_SCRIPT : RegenNinjaScript | $NINJA_SCRIPT_GENERATOR

END-OF-HERE-DOC

for sourceFile in $LIBLEGATO_SOURCES
do
    echo "build $(ObjectsFromSources $sourceFile) : Compile $sourceFile"
    echo "  flags = $NINJA_CFLAGS"
    echo

done >> $NINJA_SCRIPT
