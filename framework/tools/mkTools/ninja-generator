#!/bin/bash
# --------------------------------------------------------------------------------------------------
# Ninja build script generator for the Legato mk tools.
#
# Copyright (C) Sierra Wireless Inc.
# --------------------------------------------------------------------------------------------------

# Ensure all the required variables are set.
if [ -z "$LEGATO_ROOT" ]
then
    echo "**ERROR: LEGATO_ROOT is not set." 1>&2
    exit 1
fi

SOURCE_DIR=$LEGATO_ROOT/framework/tools/mkTools
BUILD_DIR=$LEGATO_ROOT/build/tools
NINJA_SCRIPT=$BUILD_DIR/build.ninja
NINJA_SCRIPT_GENERATOR=$PWD/$0

# Turn a list of source file paths into a list of paths to the object (.o) files that they will
# be compiled into.
function ObjectsFromSources()
{
    for sourceFile in $*
    do
        printf "%s.o " `echo "$sourceFile" | sed "s#$SOURCE_DIR#$BUILD_DIR/obj#"`
    done
}

# Select the C++ compiler to use.
if [ "$USE_CLANG" == "1" ]
then
    COMPILER="clang++ -std=c++0x"
else
    COMPILER="g++ -std=c++0x"
fi

# Use ccache.
if [[ "$USE_CCACHE" == "1" ]]
then
    if [ -z "${CCACHE}" ]
    then
        echo "Unable to find ccache while it is enabled."
        exit 1
    fi

    COMPILER="${CCACHE} ${COMPILER}"
fi

echo "Tools arch: $TOOLS_ARCH"

TOOLS_ARCH_FLAGS=""
if [[ "$TOOLS_ARCH" != "$HOST_ARCH" ]]
then
  if [[ "$TOOLS_ARCH" == "i686" ]]
  then
    TOOLS_ARCH_FLAGS="-m32"
  else
    echo "Unable to build tools for ${TOOLS_ARCH} from host ${HOST_ARCH}"
    exit 1
  fi
fi

# Get a list of all the .cpp files.
SOURCES=$(find $SOURCE_DIR -name '*.cpp' |tr '\n' ' ')

# Compute a list of all the .o files.
OBJECTS=$(ObjectsFromSources $SOURCES)

cat > $NINJA_SCRIPT <<EOF
# Build script for the Legato mk tools.

# == Auto-generated file.  DO NOT EDIT. ==
# == Generated by $0 ==

builddir = $BUILD_DIR

precompiledHeader = \$builddir/precompiled/mkTools.h.gch

rule Link
  description = Linking mk tools
  command = $COMPILER $TOOLS_ARCH_FLAGS -o \$out \$in

rule Compile
  description = Compiling mk tools sources
  depfile = \$out.d
  command = $COMPILER -MMD -MF \$out.d $TOOLS_ARCH_FLAGS \$
                      -Wall -Werror -Wno-unused-command-line-argument \$
                      -I\$builddir/precompiled/ \$
                      -I$SOURCE_DIR \$
                      -I$LEGATO_ROOT/framework/liblegato \$
                      -c \$in \$
                      -o \$out

rule PreCompile
  description = Generating pre-compiled header for mk tools.
  depfile = \$out.d
  command = $COMPILER -MMD -MF \$out.d $TOOLS_ARCH_FLAGS \$
                      -Wall -Werror -Wno-deprecated \$
                      -g \$
                      -o \$out \$in

rule GetMessages
  description = Extracting messages
  command = xgettext -d "mkTools" -L C++ -kLE_I18N --flag=LE_I18N:1:pass-c-format --boost \$
                     --force-po --copyright-holder="Sierra Wireless Inc." \$
                     --package-name="mkTools" -o \$out \$in

build \$builddir/mk : Link $OBJECTS

build \$precompiledHeader : PreCompile $SOURCE_DIR/mkTools.h

rule RegenNinjaScript
  description = Regenerating mk tools build script.
  generator = 1
  command = export LEGATO_ROOT="$LEGATO_ROOT" && \$
            $NINJA_SCRIPT_GENERATOR

build $NINJA_SCRIPT : RegenNinjaScript | $NINJA_SCRIPT_GENERATOR

build \$builddir/mkTools.po : GetMessages $SOURCES

build messages : phony \$builddir/mkTools.po

default \$builddir/mk

EOF

# Add build statements for all the .o files.
for sourceFile in $SOURCES
do
    echo "build `ObjectsFromSources $sourceFile` : Compile $sourceFile | \$precompiledHeader"
    echo

done >> $NINJA_SCRIPT

